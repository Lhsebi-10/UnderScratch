"use strict";(self.webpackChunkunder_scratch_docs=self.webpackChunkunder_scratch_docs||[]).push([[972],{4122:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Current Version/enemies","title":"Enemies","description":"This Page may be incomplete in some Areas.","source":"@site/docs/Current Version/enemies.md","sourceDirName":"Current Version","slug":"/Current Version/enemies","permalink":"/docs/Current Version/enemies","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Current Version/enemies.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Enemies","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Menus","permalink":"/docs/Current Version/menu"},"next":{"title":"Attacks","permalink":"/docs/Current Version/attacks"}}');var i=n(4848),r=n(8453);const a={title:"Enemies",sidebar_position:3},o=void 0,c={},l=[{value:"Enemy Object",id:"enemy-object",level:2},{value:"Enemy Stats:",id:"enemy-stats",level:3}];function h(e){const t={admonition:"admonition",br:"br",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.admonition,{title:"Stub",type:"note",children:(0,i.jsx)(t.p,{children:"This Page may be incomplete in some Areas."})}),"\n",(0,i.jsx)(t.admonition,{title:"WIP",type:"warning",children:(0,i.jsx)(t.p,{children:"This Feature is incomplete."})}),"\n",(0,i.jsx)(t.h2,{id:"enemy-object",children:"Enemy Object"}),"\n",(0,i.jsxs)(t.p,{children:['In Underscratch, the "enemy1" object is used for the enemy of the fight.',(0,i.jsx)(t.br,{}),"\n","inside of the object, there you can change the costume, and the enemies stats, these are saved in a list and are as follows:"]}),"\n",(0,i.jsx)(t.h3,{id:"enemy-stats",children:"Enemy Stats:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Name: used for the name in the Menu's"}),"\n",(0,i.jsx)(t.li,{children:"Hp and MaxHp: self explanatory, they can be different values"}),"\n",(0,i.jsx)(t.li,{children:"atk: this currently has no use, tho it will later be used for the check act, it does not affect the damadge of the bullets, that is handled through another variable"}),"\n",(0,i.jsx)(t.li,{children:"def: the enemies defense, gets subtracted from the attack value of the player (after they have landed the hit)"}),"\n",(0,i.jsxs)(t.li,{children:["act2 - 6: currently unused, these will be used for the acts that the player will be able to perform, regardless, here is the structure of each act block:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"line 1: name of the act"}),"\n",(0,i.jsx)(t.li,{children:"line 2-4: the text that displays when the act is performed, leaving one empty skips it"}),"\n",(0,i.jsx)(t.li,{children:'line 5: how much it "satisfies" the enemy (i.e.: the mercy bar in deltarune), percentage based'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"thats pretty much it lol."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);